---
- hosts: '{{ hosts  }}'
  remote_user: root
  tasks:

      - name: Config Password Policy for CentOS 7
        shell: authconfig --enablereqlower --enablerequpper --enablereqdigit --enablereqother --passmaxclassrepeat=2 --passminlen=10 --passminclass=4 --passmaxrepeat=2 --update
        when: ansible_distribution == "CentOS" and ansible_distribution_major_version =='7'

      - name: Config Password Policy for CentOS 5 and CentOS 6 
        lineinfile: dest=/etc/pam.d/system-auth regexp="{{ item.regexp }}" insertbefore="{{ item.insertbefore }}" line="{{ item.line }}" state=present
        with_items:
          - { regexp: '^password    requisite     pam_cracklib.so', insertbefore: '^password    sufficient' , line: 'password    requisite     pam_cracklib.so try_first_pass retry=3 type= minlen=10 dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1'}
        when: ansible_distribution == "CentOS" and ansible_distribution_major_version == '6' or ansible_distribution_major_version == '5'

      - name: Config Password Policy remember password 
        lineinfile: dest=/etc/pam.d/system-auth regexp="{{ item.regexp }}" insertbefore="{{ item.insertbefore }}" line="{{ item.line }}" state=present
        with_items:
          - { regexp: '^password    sufficient    pam_unix.so', insertbefore: '^password    required      pam_deny.so' , line: 'password    sufficient    pam_unix.so md5 shadow nullok try_first_pass use_authtok remember=20'}
        when: ansible_distribution == "CentOS"

      - name: Config Password Policy Expiry date
        lineinfile: dest=/etc/login.defs regexp="{{ item.regexp }}" insertbefore="{{ item.insertbefore }}" line="{{ item.line }}" state=present
        with_items:
          - { regexp: '^PASS_MAX_DAYS', insertbefore: '^#PASS_MAX_DAYS' , line: 'PASS_MAX_DAYS 60'}
          - { regexp: '^PASS_MIN_DAYS', insertbefore: '^#PASS_MIN_DAYS' , line: 'PASS_MIN_DAYS 2'}
          - { regexp: '^PASS_WARN_AGE', insertbefore: '^#PASS_WARN_AGE' , line: 'PASS_WARN_AGE 7'}

      - name: Install pam_cracklib Ubuntu
        apt: name="{{item}}" state=absent purge=yes force=yes autoremove=yes
        with_items:
          - libpam-pwquality
        when: ansible_distribution == "Ubuntu"

      - name: Config Password Policy for Ubuntu 12
        lineinfile: dest=/etc/pam.d/common-password regexp="{{ item.regexp }}" insertbefore="{{ item.insertbefore }}" line="{{ item.line }}" state=present
        with_items:
          - { regexp: '^password  requisite     pam_cracklib.so retry=3 minlen=8 difok=3', insertbefore: '^password [success=1 default=ignore]  pam_unix.so' , line: 'password  requisite     pam_cracklib.so retry=3 minlen=10 difok=3 lcredit=-1 ucredit=-1 dcredit=-1 ocredit=-1'}
          - { regexp: '^password  [success=1 default=ignore]  pam_unix.so obscure use_authtok try_first_pass sha512', insertbefore: '^password  requisite     pam_deny.so' , line: 'password  [success=1 default=ignore]  pam_unix.so obscure use_authtok try_first_pass sha512 remember=20'}
        when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version =='12'

      - name: Config Password Policy for Ubuntu 14
        lineinfile: dest=/etc/pam.d/common-password regexp="{{ item.regexp }}" insertbefore="{{ item.insertbefore }}" line="{{ item.line }}" state=present
        with_items:
          - { regexp: '^password  requisite     pam_pwquality.so retry=3', insertbefore: '^password [success=1 default=ignore]  pam_unix.so' , line: 'password        requisite                       pam_pwquality.so retry=3 minlen=10 lcredit=-1 ucredit=-1 dcredit=-1 ocredit=-1'}
          - { regexp: '^password  [success=1 default=ignore]  pam_unix.so obscure use_authtok try_first_pass sha512', insertbefore: '^password  requisite     pam_deny.so' , line: 'password  [success=1 default=ignore]  pam_unix.so obscure use_authtok try_first_pass sha512 remember=20'}
        when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version =='14' or ansible_distribution_major_version =='16'
